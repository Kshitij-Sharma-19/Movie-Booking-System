package com.movie.booking.config;

import feign.RequestInterceptor;
import feign.RequestTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.oauth2.jwt.Jwt; // Ensure this import is present
import org.springframework.stereotype.Component;

@Component
public class UserFeignClientInterceptor implements RequestInterceptor {

    private static final Logger log = LoggerFactory.getLogger(UserFeignClientInterceptor.class);
    private static final String AUTHORIZATION_HEADER = "Authorization";
    private static final String BEARER_TOKEN_TYPE = "Bearer";

    @Override
    public void apply(RequestTemplate template) {
        log.debug("UserFeignClientInterceptor invoked for Feign request to URL: {}", template.url());
        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();

        if (authentication != null) {
            Object principal = authentication.getPrincipal();
            log.debug("Authentication object found. Principal type: {}", (principal != null ? principal.getClass().getName() : "null"));

            if (principal instanceof Jwt) {
                Jwt jwt = (Jwt) principal;
                String tokenValue = jwt.getTokenValue();
                // It's good practice to avoid logging the full token in production.
                // Logging subject or specific claims can be helpful for debugging.
                log.info("Adding Authorization header with Bearer token for user (subject): {} to Feign request to URL: {}", 
                         jwt.getSubject(), template.url());
                template.header(AUTHORIZATION_HEADER, String.format("%s %s", BEARER_TOKEN_TYPE, tokenValue));
            } else {
                log.warn("Current principal is not a JWT. Principal type: {}. No Authorization header added for Feign request to URL: {}",
                        (principal != null ? principal.getClass().getName() : "null"), template.url());
                // This could indicate a misconfiguration if JWTs are expected,
                // or the Feign call is made from a context not authenticated via JWT.
            }
        } else {
            log.warn("Authentication is null in SecurityContextHolder. No Authorization header added for Feign request to URL: {}", template.url());
            // This typically happens if the Feign call is made from a non-secured context
            // or a context not populated by Spring Security (e.g., from a background thread
            // not inheriting the security context, or an unauthenticated request path).
        }
    }
}