package com.movie.auth.controller;

import com.movie.auth.service.JwtService;
import com.nimbusds.jose.jwk.JWK;
import com.nimbusds.jose.jwk.JWKSet;
import com.nimbusds.jose.jwk.RSAKey;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.security.interfaces.RSAPublicKey;
import java.util.Map;

@RestController
@RequiredArgsConstructor
public class JwkSetController {

    private final JwtService jwtService;

    @GetMapping("/oauth2/jwks") // Standard endpoint path for JWK Set
    public Map<String, Object> jwkSet() {
        RSAPublicKey publicKey = (RSAPublicKey) jwtService.getPublicKey();
        JWK jwk = new RSAKey.Builder(publicKey)
                // Optional: Add Key ID (kid) if needed for key rotation/management
                // .keyID(UUID.randomUUID().toString())
                .build();
        // Return the JWK Set as a Map, which Spring Boot automatically converts to JSON
        return new JWKSet(jwk).toJSONObject();
    }
}