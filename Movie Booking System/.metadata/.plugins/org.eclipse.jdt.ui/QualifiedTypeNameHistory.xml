<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.dto.TheaterDto"/>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.service.ShowtimeService"/>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.dto.ShowtimeDto"/>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.movie.booking.repository.BookingRepository"/>
    <fullyQualifiedTypeName name="com.movie.booking.client.PaymentClient"/>
    <fullyQualifiedTypeName name="com.movie.booking.model.Booking"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.ShowtimeDto"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.PaymentResponseDto"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.PaymentRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.booking.service.BookingService"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.BookingResponseDto"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.BookingRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.booking.model.BookingStatus"/>
    <fullyQualifiedTypeName name="jakarta.ws.rs.ServiceUnavailableException"/>
    <fullyQualifiedTypeName name="com.movie.booking.client.MovieCatalogClient"/>
    <fullyQualifiedTypeName name="com.movie.booking.client.MovieCatalogClient.ServiceUnavailableException"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="com.movie.booking.exception.BookingException"/>
    <fullyQualifiedTypeName name="com.movie.booking.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.OpenAPIDefinition"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.info.Info"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecurityScheme"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.enums.SecuritySchemeType"/>
    <fullyQualifiedTypeName name="com.movie.payment.service.PaymentSimulationService"/>
    <fullyQualifiedTypeName name="com.movie.payment.dto.PaymentResponseDto"/>
    <fullyQualifiedTypeName name="com.movie.payment.dto.PaymentRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.model.UserProfile"/>
    <fullyQualifiedTypeName name="com.movie.userservice.repository.UserProfileRepository"/>
    <fullyQualifiedTypeName name="com.movie.userservice.service.UserProfileService"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.UserProfileDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.CreateUserProfileRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.UpdateUserProfileRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.ReactiveJwtDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.io.Decoders"/>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="javax.crypto.spec.SecretKeySpec"/>
    <fullyQualifiedTypeName name="com.movie.auth.service.AuthenticationService"/>
    <fullyQualifiedTypeName name="com.movie.auth.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.SignUpRequest"/>
    <fullyQualifiedTypeName name="com.movie.auth.model.Role"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.UserSummaryDto"/>
    <fullyQualifiedTypeName name="com.movie.auth.model.User"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.config.ConfigDataResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.movie.auth.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.JwtAuthenticationResponse"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="java.nio.file.AccessDeniedException"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="com.movie.auth.exception.UserAlreadyExistsException"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
</qualifiedTypeNameHistroy>
