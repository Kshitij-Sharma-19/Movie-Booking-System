<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.security.SecurityScheme"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.enums.SecuritySchemeType"/>
    <fullyQualifiedTypeName name="com.movie.payment.service.PaymentSimulationService"/>
    <fullyQualifiedTypeName name="com.movie.userservice.model.UserProfile"/>
    <fullyQualifiedTypeName name="com.movie.userservice.repository.UserProfileRepository"/>
    <fullyQualifiedTypeName name="com.movie.userservice.service.UserProfileService"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.UserProfileDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.CreateUserProfileRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.dto.UpdateUserProfileRequestDto"/>
    <fullyQualifiedTypeName name="com.movie.userservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.ReactiveJwtDecoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.io.Decoders"/>
    <fullyQualifiedTypeName name="javax.crypto.SecretKey"/>
    <fullyQualifiedTypeName name="javax.crypto.spec.SecretKeySpec"/>
    <fullyQualifiedTypeName name="com.movie.auth.service.AuthenticationService"/>
    <fullyQualifiedTypeName name="com.movie.auth.repository.UserRepository"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.SignUpRequest"/>
    <fullyQualifiedTypeName name="com.movie.auth.model.Role"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.UserSummaryDto"/>
    <fullyQualifiedTypeName name="com.movie.auth.model.User"/>
    <fullyQualifiedTypeName name="org.springframework.boot.context.config.ConfigDataResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.movie.auth.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.movie.auth.dto.JwtAuthenticationResponse"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="java.nio.file.AccessDeniedException"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="com.movie.auth.exception.UserAlreadyExistsException"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.reactive.CorsWebFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="jakarta.annotation.PostConstruct"/>
    <fullyQualifiedTypeName name="com.stripe.Stripe"/>
    <fullyQualifiedTypeName name="com.movie.payment.dto.PaymentResponseDto"/>
    <fullyQualifiedTypeName name="com.movie.payment.dto.PaymentRequestDto"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="com.stripe.param.PaymentIntentCreateParams"/>
    <fullyQualifiedTypeName name="com.stripe.param.PaymentIntentCreateParams.ConfirmationMethod"/>
    <fullyQualifiedTypeName name="com.stripe.model.PaymentIntent"/>
    <fullyQualifiedTypeName name="com.stripe.exception.StripeException"/>
    <fullyQualifiedTypeName name="com.movie.payment.dto.PaymentResponseDto.PaymentStatus"/>
    <fullyQualifiedTypeName name="jakarta.validation.constraints.NotEmpty"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.movie.booking.service.BookingService"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.CallNotPermittedException"/>
    <fullyQualifiedTypeName name="com.movie.booking.dto.SeatInitRequestDto"/>
    <fullyQualifiedTypeName name="jakarta.ws.rs.ServiceUnavailableException"/>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.client.BookingServiceClient"/>
    <fullyQualifiedTypeName name="com.movie.moviecatalogservice.dto.SeatInitRequestDto"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
</qualifiedTypeNameHistroy>
